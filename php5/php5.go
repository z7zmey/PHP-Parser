//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	"strconv"
	"strings"

	"github.com/z7zmey/php-parser/comment"
	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign"
	"github.com/z7zmey/php-parser/node/expr/binary"
	"github.com/z7zmey/php-parser/node/expr/cast"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/scanner"
)

//line php5/php5.y:22
type yySymType struct {
	yys                     int
	node                    node.Node
	token                   *scanner.Token
	list                    []node.Node
	simpleIndirectReference simpleIndirectReference

	ClassExtends     *stmt.ClassExtends
	ClassImplements  *stmt.ClassImplements
	InterfaceExtends *stmt.InterfaceExtends
	ClosureUse       *expr.ClosureUse
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_POW_EQUAL = 57462
const T_DIV_EQUAL = 57463
const T_CONCAT_EQUAL = 57464
const T_MOD_EQUAL = 57465
const T_AND_EQUAL = 57466
const T_OR_EQUAL = 57467
const T_XOR_EQUAL = 57468
const T_SL_EQUAL = 57469
const T_SR_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_POW = 57473
const T_SL = 57474
const T_SR = 57475
const T_IS_IDENTICAL = 57476
const T_IS_NOT_IDENTICAL = 57477
const T_IS_EQUAL = 57478
const T_IS_NOT_EQUAL = 57479
const T_IS_SMALLER_OR_EQUAL = 57480
const T_IS_GREATER_OR_EQUAL = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:6806
type simpleIndirectReference struct {
	all  []*expr.Variable
	last *expr.Variable
}

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 52,
	104, 436,
	105, 436,
	-2, 434,
	-1, 103,
	78, 333,
	-2, 412,
	-1, 115,
	78, 452,
	146, 448,
	-2, 458,
	-1, 155,
	104, 436,
	105, 436,
	-2, 434,
	-1, 205,
	144, 307,
	147, 307,
	-2, 431,
	-1, 206,
	104, 436,
	105, 436,
	144, 308,
	147, 308,
	-2, 434,
	-1, 272,
	78, 452,
	-2, 458,
	-1, 299,
	78, 335,
	-2, 414,
	-1, 303,
	146, 449,
	-2, 459,
	-1, 312,
	78, 334,
	-2, 413,
	-1, 379,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 275,
	-1, 380,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 276,
	-1, 381,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 277,
	-1, 382,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 278,
	-1, 383,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 279,
	-1, 384,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 280,
	-1, 385,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 281,
	-1, 386,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 282,
	-1, 393,
	104, 436,
	105, 436,
	-2, 434,
	-1, 401,
	147, 143,
	-2, 148,
	-1, 463,
	104, 436,
	105, 436,
	147, 516,
	158, 516,
	-2, 434,
	-1, 464,
	147, 517,
	158, 517,
	-2, 431,
	-1, 465,
	104, 436,
	105, 436,
	-2, 434,
	-1, 487,
	147, 157,
	158, 157,
	-2, 431,
	-1, 488,
	104, 436,
	105, 436,
	147, 158,
	158, 158,
	-2, 434,
	-1, 494,
	146, 473,
	-2, 518,
	-1, 500,
	146, 473,
	-2, 519,
	-1, 522,
	78, 333,
	-2, 370,
	-1, 540,
	93, 136,
	94, 136,
	95, 136,
	-2, 0,
	-1, 552,
	147, 143,
	-2, 148,
	-1, 565,
	147, 143,
	-2, 148,
	-1, 582,
	144, 309,
	147, 309,
	-2, 431,
	-1, 583,
	104, 436,
	105, 436,
	144, 310,
	147, 310,
	-2, 434,
	-1, 683,
	78, 335,
	-2, 372,
	-1, 781,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 398,
	-1, 782,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 399,
	-1, 783,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 400,
	-1, 784,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 401,
	-1, 785,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 402,
	-1, 786,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 403,
	-1, 787,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 404,
	-1, 788,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 405,
	-1, 791,
	78, 334,
	-2, 371,
	-1, 841,
	37, 202,
	-2, 199,
	-1, 881,
	31, 129,
	32, 129,
	33, 129,
	143, 129,
	-2, 0,
	-1, 916,
	95, 141,
	-2, 0,
	-1, 918,
	31, 128,
	32, 128,
	33, 128,
	143, 128,
	-2, 0,
	-1, 945,
	93, 137,
	94, 137,
	95, 137,
	-2, 0,
	-1, 973,
	29, 190,
	-2, 5,
	-1, 982,
	147, 143,
	-2, 148,
	-1, 999,
	144, 194,
	-2, 196,
}

const yyPrivate = 57344

const yyLast = 9005

var yyAct = [...]int{

	103, 572, 845, 566, 1008, 967, 716, 62, 421, 828,
	201, 124, 132, 920, 341, 595, 608, 453, 685, 568,
	817, 809, 736, 475, 462, 593, 422, 139, 141, 143,
	580, 146, 40, 99, 391, 265, 116, 518, 545, 320,
	316, 445, 119, 332, 331, 448, 9, 8, 486, 131,
	159, 27, 2, 659, 44, 290, 115, 229, 229, 163,
	980, 478, 961, 943, 939, 942, 936, 494, 45, 122,
	655, 933, 193, 823, 739, 711, 563, 517, 359, 941,
	326, 252, 268, 955, 658, 660, 661, 923, 1004, 659,
	665, 666, 855, 737, 956, 154, 679, 680, 587, 451,
	934, 122, 500, 587, 122, 299, 655, 259, 795, 495,
	657, 656, 205, 180, 935, 271, 242, 138, 273, 899,
	658, 660, 661, 677, 678, 667, 634, 312, 730, 544,
	317, 321, 620, 900, 324, 476, 330, 635, 272, 7,
	202, 511, 586, 621, 179, 181, 182, 507, 561, 557,
	659, 665, 666, 587, 340, 512, 360, 122, 142, 562,
	558, 508, 229, 122, 160, 356, 978, 655, 40, 909,
	361, 657, 656, 303, 358, 351, 313, 134, 311, 357,
	163, 658, 660, 661, 908, 931, 667, 906, 863, 352,
	314, 135, 242, 857, 268, 793, 229, 302, 659, 452,
	747, 641, 633, 301, 659, 665, 666, 673, 674, 675,
	676, 679, 680, 596, 121, 655, 353, 105, 193, 632,
	626, 655, 1020, 625, 229, 657, 656, 271, 118, 387,
	273, 452, 426, 598, 452, 658, 660, 661, 677, 678,
	667, 613, 597, 605, 596, 474, 121, 612, 606, 121,
	272, 659, 751, 750, 295, 294, 288, 282, 441, 180,
	183, 184, 255, 229, 254, 394, 1003, 1015, 655, 952,
	917, 457, 657, 656, 232, 232, 334, 887, 337, 884,
	178, 177, 658, 660, 661, 233, 233, 667, 872, 827,
	179, 181, 182, 816, 229, 176, 729, 695, 400, 266,
	636, 450, 121, 242, 742, 979, 296, 447, 304, 161,
	274, 127, 127, 122, 122, 132, 397, 627, 431, 510,
	982, 449, 429, 514, 932, 308, 894, 522, 140, 127,
	459, 122, 298, 1001, 826, 594, 820, 450, 811, 810,
	915, 40, 450, 493, 464, 473, 492, 542, 499, 440,
	485, 498, 684, 588, 565, 9, 8, 449, 552, 401,
	522, 424, 449, 503, 506, 437, 438, 487, 538, 345,
	298, 296, 346, 193, 289, 279, 276, 275, 251, 232,
	230, 230, 223, 231, 231, 547, 197, 196, 195, 145,
	233, 438, 437, 437, 127, 438, 122, 553, 230, 234,
	234, 231, 573, 549, 573, 578, 573, 581, 123, 229,
	585, 266, 878, 232, 180, 136, 1012, 234, 1011, 705,
	706, 991, 274, 986, 233, 985, 589, 40, 705, 706,
	925, 310, 433, 309, 401, 178, 177, 914, 882, 813,
	807, 232, 806, 354, 800, 179, 181, 182, 7, 714,
	176, 701, 233, 540, 548, 546, 541, 617, 121, 121,
	543, 502, 399, 230, 450, 450, 231, 260, 349, 157,
	493, 499, 439, 492, 498, 582, 121, 983, 127, 907,
	232, 607, 234, 1021, 449, 449, 977, 919, 893, 892,
	229, 233, 450, 890, 734, 450, 579, 450, 616, 307,
	618, 447, 198, 619, 436, 193, 180, 614, 258, 317,
	832, 232, 449, 321, 876, 449, 296, 449, 522, 732,
	225, 226, 233, 804, 805, 683, 682, 522, 697, 698,
	812, 261, 262, 40, 522, 522, 522, 522, 522, 704,
	456, 121, 425, 519, 532, 652, 180, 9, 8, 647,
	126, 637, 650, 573, 649, 654, 712, 127, 702, 229,
	229, 229, 127, 127, 522, 126, 573, 720, 989, 728,
	40, 40, 127, 92, 516, 513, 733, 532, 573, 581,
	731, 689, 127, 509, 460, 707, 268, 709, 229, 229,
	129, 130, 323, 715, 470, 469, 455, 741, 296, 428,
	427, 725, 283, 287, 305, 297, 300, 296, 735, 744,
	125, 577, 570, 571, 740, 127, 818, 973, 743, 271,
	405, 738, 273, 127, 866, 122, 232, 296, 296, 322,
	229, 574, 229, 450, 575, 133, 296, 233, 746, 447,
	7, 574, 272, 688, 575, 296, 756, 849, 850, 851,
	848, 847, 846, 449, 318, 596, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 791, 760, 522, 574, 133, 435, 575,
	464, 758, 269, 759, 458, 270, 264, 260, 722, 63,
	403, 286, 439, 792, 487, 801, 209, 232, 260, 55,
	794, 234, 522, 285, 208, 468, 797, 987, 233, 229,
	260, 472, 829, 825, 1009, 306, 988, 480, 481, 260,
	727, 573, 46, 833, 496, 532, 560, 260, 573, 852,
	339, 821, 439, 260, 532, 814, 705, 706, 284, 815,
	830, 532, 532, 532, 532, 532, 853, 834, 798, 744,
	471, 261, 262, 858, 240, 860, 227, 235, 1019, 993,
	121, 286, 261, 262, 164, 959, 232, 232, 232, 957,
	927, 532, 898, 470, 261, 262, 895, 233, 233, 233,
	522, 193, 551, 261, 262, 1005, 522, 522, 1000, 46,
	962, 261, 262, 266, 937, 232, 232, 261, 262, 708,
	705, 706, 877, 903, 274, 127, 233, 233, 762, 229,
	761, 229, 879, 724, 522, 885, 883, 573, 891, 886,
	880, 653, 180, 183, 184, 802, 651, 648, 603, 190,
	192, 822, 515, 482, 902, 573, 905, 232, 600, 232,
	602, 601, 40, 178, 177, 1, 396, 260, 233, 325,
	233, 889, 257, 179, 181, 182, 189, 191, 176, 229,
	901, 454, 522, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	520, 924, 532, 450, 204, 491, 203, 200, 910, 447,
	137, 40, 938, 831, 522, 127, 749, 122, 505, 755,
	865, 261, 262, 449, 446, 610, 590, 881, 591, 532,
	911, 592, 686, 520, 522, 256, 232, 522, 875, 841,
	522, 996, 573, 964, 573, 972, 40, 233, 40, 966,
	965, 904, 484, 897, 840, 837, 40, 567, 40, 40,
	1007, 1006, 522, 726, 719, 395, 390, 573, 972, 165,
	342, 958, 984, 699, 960, 40, 539, 963, 930, 40,
	40, 522, 291, 573, 230, 461, 995, 231, 573, 997,
	162, 999, 158, 319, 315, 128, 916, 404, 918, 981,
	576, 402, 3, 234, 40, 573, 1013, 532, 926, 336,
	928, 929, 1014, 532, 532, 946, 573, 1017, 994, 1010,
	344, 921, 40, 940, 921, 529, 609, 745, 998, 971,
	970, 969, 491, 945, 968, 839, 232, 949, 232, 838,
	950, 532, 836, 41, 569, 752, 40, 233, 16, 233,
	15, 611, 40, 824, 947, 721, 718, 803, 696, 12,
	250, 76, 121, 77, 117, 267, 974, 65, 90, 599,
	687, 172, 171, 193, 91, 521, 102, 690, 691, 692,
	693, 694, 75, 13, 327, 101, 232, 100, 80, 532,
	120, 520, 527, 4, 42, 992, 0, 233, 639, 640,
	520, 0, 0, 0, 643, 644, 0, 520, 520, 520,
	520, 520, 168, 169, 180, 183, 184, 185, 186, 187,
	188, 190, 192, 0, 0, 0, 0, 0, 0, 0,
	1016, 532, 0, 194, 174, 178, 177, 520, 0, 1022,
	0, 0, 173, 0, 175, 179, 181, 182, 189, 191,
	176, 532, 0, 0, 532, 0, 0, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 856, 0, 0, 0, 532,
	0, 0, 0, 861, 862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 0, 0, 532, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 790, 0, 0, 687, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 0, 0, 520, 672,
	671, 659, 665, 666, 673, 674, 675, 676, 679, 680,
	0, 170, 172, 171, 193, 0, 0, 0, 655, 0,
	681, 663, 657, 656, 0, 520, 0, 0, 0, 662,
	0, 664, 658, 660, 661, 677, 678, 667, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	0, 0, 0, 168, 169, 180, 183, 184, 185, 186,
	187, 188, 190, 192, 0, 350, 0, 0, 811, 810,
	668, 669, 0, 870, 194, 174, 178, 177, 0, 873,
	874, 210, 0, 173, 454, 175, 179, 181, 182, 189,
	191, 176, 611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 0, 0, 520,
	520, 672, 671, 659, 665, 666, 673, 674, 675, 676,
	679, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	655, 32, 681, 663, 657, 656, 0, 520, 0, 0,
	0, 662, 0, 664, 658, 660, 661, 677, 678, 667,
	0, 0, 0, 0, 0, 912, 148, 152, 156, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 52, 0,
	199, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 224, 0, 0, 0,
	236, 237, 238, 239, 193, 155, 241, 944, 243, 244,
	245, 246, 247, 248, 249, 0, 253, 0, 0, 0,
	0, 263, 206, 0, 0, 0, 277, 278, 0, 280,
	281, 0, 0, 0, 0, 228, 228, 520, 0, 0,
	292, 0, 0, 168, 169, 180, 183, 184, 185, 186,
	187, 188, 190, 192, 0, 0, 0, 520, 0, 0,
	520, 0, 0, 520, 194, 174, 178, 177, 0, 0,
	0, 0, 0, 173, 0, 175, 179, 181, 182, 189,
	191, 176, 241, 0, 0, 520, 0, 343, 0, 0,
	0, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 520, 0, 0, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 210, 388, 0, 156, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 672, 671, 659, 665,
	666, 673, 674, 675, 676, 679, 680, 0, 0, 0,
	0, 0, 0, 241, 0, 655, 434, 434, 663, 657,
	656, 0, 423, 442, 0, 0, 662, 0, 664, 658,
	660, 661, 677, 678, 667, 0, 0, 156, 466, 0,
	0, 467, 0, 0, 434, 0, 0, 0, 0, 0,
	434, 292, 0, 0, 0, 0, 434, 434, 0, 0,
	156, 444, 0, 434, 497, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 463, 465, 0, 0, 0, 84,
	85, 73, 0, 106, 107, 127, 89, 122, 0, 0,
	0, 0, 479, 96, 0, 0, 0, 488, 0, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 46, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 554, 82, 83, 0, 0, 0, 0,
	622, 0, 0, 0, 53, 97, 0, 95, 111, 112,
	113, 108, 109, 210, 0, 0, 0, 0, 0, 94,
	0, 556, 0, 0, 144, 114, 110, 104, 490, 86,
	87, 88, 0, 0, 0, 0, 81, 54, 156, 913,
	0, 79, 43, 150, 0, 0, 0, 0, 0, 56,
	57, 0, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 668,
	669, 0, 0, 0, 0, 583, 0, 584, 0, 0,
	0, 0, 0, 0, 615, 93, 78, 0, 0, 0,
	0, 64, 483, 98, 0, 0, 489, 59, 58, 60,
	61, 74, 121, 0, 0, 0, 0, 0, 628, 630,
	672, 671, 659, 665, 666, 673, 674, 675, 676, 679,
	680, 669, 638, 0, 0, 0, 0, 0, 0, 655,
	0, 681, 663, 657, 656, 0, 0, 0, 0, 0,
	662, 0, 664, 658, 660, 661, 677, 678, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 672, 671, 659, 665, 666, 673, 674, 675, 676,
	679, 680, 0, 0, 193, 343, 703, 0, 0, 0,
	655, 0, 681, 663, 657, 656, 0, 713, 0, 0,
	0, 662, 0, 664, 658, 660, 661, 677, 678, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 183, 184, 185, 186,
	187, 188, 190, 192, 0, 0, 434, 392, 717, 717,
	0, 670, 668, 669, 0, 174, 178, 177, 748, 0,
	0, 0, 0, 0, 434, 753, 179, 181, 182, 189,
	191, 176, 0, 156, 0, 0, 423, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	670, 668, 669, 672, 671, 659, 665, 666, 673, 674,
	675, 676, 679, 680, 0, 0, 0, 0, 0, 871,
	463, 0, 655, 843, 681, 663, 657, 656, 479, 844,
	479, 0, 842, 662, 488, 664, 658, 660, 661, 677,
	678, 667, 672, 671, 659, 665, 666, 673, 674, 675,
	676, 679, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 655, 869, 681, 663, 657, 656, 808, 0, 0,
	0, 0, 662, 0, 664, 658, 660, 661, 677, 678,
	667, 0, 0, 849, 850, 851, 848, 847, 846, 659,
	665, 666, 673, 674, 675, 676, 679, 680, 0, 0,
	0, 854, 0, 0, 434, 0, 655, 0, 0, 663,
	657, 656, 434, 434, 0, 0, 0, 819, 0, 867,
	658, 660, 661, 677, 678, 667, 0, 0, 896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 6, 0, 84, 85, 73, 19, 106,
	107, 14, 89, 122, 0, 31, 0, 0, 0, 96,
	30, 21, 20, 0, 22, 0, 34, 0, 35, 343,
	0, 23, 0, 0, 0, 24, 25, 39, 46, 17,
	26, 37, 0, 0, 38, 11, 0, 28, 0, 33,
	82, 83, 0, 47, 49, 51, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 717, 0, 423,
	10, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 43, 29,
	48, 50, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 18, 646, 36, 0, 64, 0, 98,
	0, 0, 0, 59, 58, 60, 61, 74, 121, 6,
	0, 84, 85, 73, 19, 106, 107, 14, 89, 122,
	0, 31, 0, 0, 0, 96, 30, 21, 20, 0,
	22, 0, 34, 0, 35, 559, 0, 23, 0, 0,
	0, 24, 25, 39, 46, 17, 26, 37, 0, 0,
	38, 11, 0, 28, 0, 33, 82, 83, 0, 47,
	49, 51, 0, 0, 0, 0, 53, 97, 0, 95,
	111, 112, 113, 108, 109, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 10, 114, 110, 104,
	0, 86, 87, 88, 0, 0, 0, 0, 81, 54,
	0, 0, 0, 79, 43, 29, 48, 50, 0, 0,
	0, 56, 57, 0, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 78, 18,
	504, 36, 0, 64, 0, 98, 0, 0, 0, 59,
	58, 60, 61, 74, 121, 6, 210, 84, 85, 73,
	19, 106, 107, 14, 89, 122, 0, 31, 0, 0,
	0, 96, 30, 21, 20, 0, 22, 0, 34, 0,
	35, 0, 0, 23, 0, 0, 0, 24, 25, 39,
	46, 17, 26, 37, 0, 0, 38, 11, 0, 28,
	0, 33, 82, 83, 5, 47, 49, 51, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 10, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	43, 29, 48, 50, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 18, 0, 36, 0, 64,
	0, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 329, 0, 84, 85, 73, 19, 106, 107, 14,
	89, 122, 0, 31, 0, 0, 0, 96, 30, 21,
	20, 0, 22, 0, 34, 0, 35, 0, 0, 23,
	0, 0, 0, 24, 25, 39, 46, 0, 26, 37,
	0, 0, 38, 0, 0, 28, 0, 33, 82, 83,
	333, 47, 49, 51, 0, 0, 0, 0, 53, 97,
	0, 95, 111, 112, 113, 108, 109, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 144, 114,
	110, 104, 0, 86, 87, 88, 0, 0, 0, 0,
	81, 54, 0, 0, 0, 79, 43, 29, 48, 50,
	0, 0, 0, 56, 57, 0, 66, 67, 68, 69,
	70, 71, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	78, 18, 1023, 36, 0, 64, 0, 98, 0, 0,
	0, 59, 58, 60, 61, 74, 121, 329, 0, 84,
	85, 73, 19, 106, 107, 14, 89, 122, 0, 31,
	0, 0, 0, 96, 30, 21, 20, 0, 22, 0,
	34, 0, 35, 0, 0, 23, 0, 0, 0, 24,
	25, 39, 46, 0, 26, 37, 0, 0, 38, 0,
	0, 28, 0, 33, 82, 83, 333, 47, 49, 51,
	0, 0, 0, 0, 53, 97, 0, 95, 111, 112,
	113, 108, 109, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 144, 114, 110, 104, 0, 86,
	87, 88, 0, 0, 0, 0, 81, 54, 0, 0,
	0, 79, 43, 29, 48, 50, 0, 0, 0, 56,
	57, 0, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 78, 18, 1018, 36,
	0, 64, 0, 98, 0, 0, 0, 59, 58, 60,
	61, 74, 121, 329, 0, 84, 85, 73, 19, 106,
	107, 14, 89, 122, 0, 31, 0, 0, 0, 96,
	30, 21, 20, 0, 22, 0, 34, 0, 35, 0,
	0, 23, 0, 0, 0, 24, 25, 39, 46, 0,
	26, 37, 0, 0, 38, 0, 0, 28, 0, 33,
	82, 83, 333, 47, 49, 51, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 43, 29,
	48, 50, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 18, 1002, 36, 0, 64, 0, 98,
	0, 0, 0, 59, 58, 60, 61, 74, 121, 329,
	0, 84, 85, 73, 19, 106, 107, 14, 89, 122,
	0, 31, 0, 0, 0, 96, 30, 21, 20, 0,
	22, 990, 34, 0, 35, 0, 0, 23, 0, 0,
	0, 24, 25, 39, 46, 0, 26, 37, 0, 0,
	38, 0, 0, 28, 0, 33, 82, 83, 333, 47,
	49, 51, 0, 0, 0, 0, 53, 97, 0, 95,
	111, 112, 113, 108, 109, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 144, 114, 110, 104,
	0, 86, 87, 88, 0, 0, 0, 0, 81, 54,
	0, 0, 0, 79, 43, 29, 48, 50, 0, 0,
	0, 56, 57, 0, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 78, 18,
	0, 36, 0, 64, 0, 98, 0, 0, 0, 59,
	58, 60, 61, 74, 121, 329, 0, 84, 85, 73,
	19, 106, 107, 14, 89, 122, 0, 31, 0, 0,
	0, 96, 30, 21, 20, 0, 22, 0, 34, 976,
	35, 0, 0, 23, 0, 0, 0, 24, 25, 39,
	46, 0, 26, 37, 0, 0, 38, 0, 0, 28,
	0, 33, 82, 83, 333, 47, 49, 51, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	43, 29, 48, 50, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 18, 0, 36, 0, 64,
	0, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 329, 0, 84, 85, 73, 19, 106, 107, 14,
	89, 122, 0, 31, 0, 0, 0, 96, 30, 21,
	20, 0, 22, 0, 34, 0, 35, 0, 0, 23,
	0, 0, 0, 24, 25, 39, 46, 0, 26, 37,
	0, 0, 38, 0, 0, 28, 0, 33, 82, 83,
	333, 47, 49, 51, 0, 0, 0, 0, 53, 97,
	0, 95, 111, 112, 113, 108, 109, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 144, 114,
	110, 104, 0, 86, 87, 88, 0, 0, 0, 0,
	81, 54, 0, 0, 0, 79, 43, 29, 48, 50,
	0, 0, 0, 56, 57, 0, 66, 67, 68, 69,
	70, 71, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	78, 18, 975, 36, 0, 64, 0, 98, 0, 0,
	0, 59, 58, 60, 61, 74, 121, 329, 0, 84,
	85, 73, 19, 106, 107, 14, 89, 122, 0, 31,
	0, 0, 0, 96, 30, 21, 20, 0, 22, 0,
	34, 0, 35, 0, 0, 23, 0, 0, 0, 24,
	25, 39, 46, 0, 26, 37, 0, 0, 38, 0,
	0, 28, 0, 33, 82, 83, 333, 47, 49, 51,
	0, 0, 0, 0, 53, 97, 0, 95, 111, 112,
	113, 108, 109, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 144, 114, 110, 104, 0, 86,
	87, 88, 0, 0, 0, 0, 81, 54, 0, 0,
	0, 79, 43, 29, 48, 50, 0, 0, 0, 56,
	57, 0, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 78, 18, 954, 36,
	0, 64, 0, 98, 0, 0, 0, 59, 58, 60,
	61, 74, 121, 329, 0, 84, 85, 73, 19, 106,
	107, 14, 89, 122, 0, 31, 0, 0, 0, 96,
	30, 21, 20, 0, 22, 0, 34, 0, 35, 0,
	0, 23, 0, 0, 0, 24, 25, 39, 46, 0,
	26, 37, 0, 0, 38, 0, 0, 28, 0, 33,
	82, 83, 333, 47, 49, 51, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 43, 29,
	48, 50, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 18, 953, 36, 0, 64, 0, 98,
	0, 0, 0, 59, 58, 60, 61, 74, 121, 329,
	0, 84, 85, 73, 19, 106, 107, 14, 89, 122,
	0, 31, 0, 0, 0, 96, 30, 21, 20, 0,
	22, 0, 34, 0, 35, 0, 0, 23, 0, 0,
	0, 24, 25, 39, 46, 0, 26, 37, 0, 0,
	38, 0, 0, 28, 0, 33, 82, 83, 333, 47,
	49, 51, 0, 0, 0, 0, 53, 97, 0, 95,
	111, 112, 113, 108, 109, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 144, 114, 110, 104,
	0, 86, 87, 88, 0, 0, 0, 0, 81, 54,
	0, 0, 0, 79, 43, 29, 48, 50, 0, 0,
	0, 56, 57, 0, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 78, 18,
	951, 36, 0, 64, 0, 98, 0, 0, 0, 59,
	58, 60, 61, 74, 121, 329, 0, 84, 85, 73,
	19, 106, 107, 14, 89, 122, 0, 31, 0, 0,
	0, 96, 30, 21, 20, 0, 22, 0, 34, 0,
	35, 888, 0, 23, 0, 0, 0, 24, 25, 39,
	46, 0, 26, 37, 0, 0, 38, 0, 0, 28,
	0, 33, 82, 83, 333, 47, 49, 51, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	43, 29, 48, 50, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 18, 0, 36, 0, 64,
	0, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 329, 0, 84, 85, 73, 19, 106, 107, 14,
	89, 122, 0, 31, 0, 0, 0, 96, 30, 21,
	20, 700, 22, 0, 34, 0, 35, 0, 0, 23,
	0, 0, 0, 24, 25, 39, 46, 0, 26, 37,
	0, 0, 38, 0, 0, 28, 0, 33, 82, 83,
	333, 47, 49, 51, 0, 0, 0, 0, 53, 97,
	0, 95, 111, 112, 113, 108, 109, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 144, 114,
	110, 104, 0, 86, 87, 88, 0, 0, 0, 0,
	81, 54, 0, 0, 0, 79, 43, 29, 48, 50,
	0, 0, 0, 56, 57, 0, 66, 67, 68, 69,
	70, 71, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	78, 18, 0, 36, 0, 64, 0, 98, 0, 0,
	0, 59, 58, 60, 61, 74, 121, 329, 0, 84,
	85, 73, 19, 106, 107, 14, 89, 122, 0, 31,
	0, 0, 0, 96, 30, 21, 20, 0, 22, 0,
	34, 0, 35, 0, 0, 23, 0, 0, 0, 24,
	25, 39, 46, 0, 26, 37, 0, 0, 38, 0,
	0, 28, 0, 33, 82, 83, 333, 47, 49, 51,
	0, 0, 0, 0, 53, 97, 0, 95, 111, 112,
	113, 108, 109, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 144, 114, 110, 104, 0, 86,
	87, 88, 0, 0, 0, 0, 81, 54, 0, 0,
	0, 79, 43, 29, 48, 50, 0, 0, 0, 56,
	57, 0, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 78, 18, 564, 36,
	0, 64, 0, 98, 0, 0, 0, 59, 58, 60,
	61, 74, 121, 329, 0, 84, 85, 73, 19, 106,
	107, 14, 89, 122, 0, 31, 0, 0, 0, 96,
	30, 21, 20, 0, 22, 0, 34, 0, 35, 0,
	0, 23, 0, 0, 0, 24, 25, 39, 46, 0,
	26, 37, 0, 0, 38, 0, 0, 28, 0, 33,
	82, 83, 333, 47, 49, 51, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 43, 29,
	48, 50, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 18, 328, 36, 0, 64, 0, 98,
	0, 0, 0, 59, 58, 60, 61, 74, 121, 329,
	0, 84, 85, 73, 19, 106, 107, 14, 89, 122,
	0, 31, 0, 0, 0, 96, 30, 21, 20, 0,
	22, 0, 34, 0, 35, 0, 0, 23, 0, 0,
	0, 24, 25, 39, 46, 0, 26, 37, 0, 0,
	38, 0, 0, 28, 0, 33, 82, 83, 333, 47,
	49, 51, 0, 0, 0, 0, 53, 97, 0, 95,
	111, 112, 113, 108, 109, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 144, 114, 110, 104,
	0, 86, 87, 88, 0, 0, 0, 0, 81, 54,
	0, 0, 0, 79, 43, 29, 48, 50, 0, 0,
	0, 56, 57, 0, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 78, 18,
	0, 36, 0, 64, 0, 98, 0, 0, 0, 59,
	58, 60, 61, 74, 121, 84, 85, 73, 19, 106,
	107, 14, 89, 122, 0, 31, 0, 0, 0, 96,
	30, 21, 20, 0, 22, 0, 34, 0, 35, 0,
	0, 23, 0, 0, 0, 24, 25, 39, 46, 0,
	26, 37, 0, 0, 38, 0, 0, 28, 0, 33,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 43, 29,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 18, 0, 36, 948, 64, 0, 98,
	0, 0, 0, 59, 58, 60, 61, 74, 121, 84,
	85, 73, 19, 106, 107, 14, 89, 122, 0, 31,
	0, 0, 0, 96, 30, 21, 20, 0, 22, 0,
	34, 0, 35, 0, 0, 23, 0, 0, 0, 24,
	25, 39, 46, 0, 26, 37, 0, 0, 38, 0,
	0, 28, 0, 33, 82, 83, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 97, 0, 95, 111, 112,
	113, 108, 109, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 144, 114, 110, 104, 0, 86,
	87, 88, 0, 0, 0, 0, 81, 54, 0, 0,
	0, 79, 43, 29, 0, 0, 0, 0, 0, 56,
	57, 0, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 78, 18, 0, 36,
	922, 64, 0, 98, 0, 0, 0, 59, 58, 60,
	61, 74, 121, 84, 85, 73, 19, 106, 107, 14,
	89, 122, 0, 31, 0, 0, 0, 96, 30, 21,
	20, 0, 22, 0, 34, 0, 35, 0, 0, 23,
	0, 0, 0, 24, 25, 39, 46, 0, 26, 37,
	0, 0, 38, 0, 0, 28, 0, 33, 82, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 97,
	0, 95, 111, 112, 113, 108, 109, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 144, 114,
	110, 104, 0, 86, 87, 88, 0, 0, 0, 0,
	81, 54, 0, 0, 0, 79, 43, 29, 0, 0,
	0, 0, 0, 56, 57, 0, 66, 67, 68, 69,
	70, 71, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	78, 18, 0, 36, 723, 64, 0, 98, 0, 0,
	0, 59, 58, 60, 61, 74, 121, 84, 85, 73,
	19, 106, 107, 14, 89, 122, 0, 31, 0, 0,
	0, 96, 30, 21, 20, 0, 22, 0, 34, 0,
	35, 0, 0, 23, 0, 0, 0, 24, 25, 39,
	46, 0, 26, 37, 0, 0, 38, 0, 0, 28,
	0, 33, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	43, 29, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 18, 0, 36, 338, 64,
	0, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 84, 85, 73, 19, 106, 107, 14, 89, 122,
	0, 31, 0, 0, 0, 96, 30, 21, 20, 0,
	22, 0, 34, 0, 35, 0, 0, 23, 0, 0,
	0, 24, 25, 39, 46, 0, 26, 37, 0, 0,
	38, 0, 0, 28, 0, 33, 82, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 53, 97, 0, 95,
	111, 112, 113, 108, 109, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 144, 114, 110, 104,
	0, 86, 87, 88, 0, 0, 0, 0, 81, 54,
	0, 0, 0, 79, 43, 29, 0, 0, 0, 0,
	0, 56, 57, 0, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 78, 18,
	0, 36, 335, 64, 0, 98, 0, 0, 0, 59,
	58, 60, 61, 74, 121, 84, 85, 73, 19, 106,
	107, 14, 89, 122, 0, 31, 0, 0, 0, 96,
	30, 21, 20, 0, 22, 0, 34, 0, 35, 0,
	0, 23, 0, 0, 0, 24, 25, 39, 46, 0,
	26, 37, 0, 0, 38, 0, 0, 28, 0, 33,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 43, 29,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 84, 85, 73, 0, 106,
	107, 127, 89, 122, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 18, 0, 36, 0, 64, 46, 98,
	0, 0, 0, 59, 58, 60, 61, 74, 121, 0,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 490, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 149, 150,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 84, 85, 73, 0, 106,
	107, 127, 89, 122, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 0, 0, 0, 0, 64, 46, 98,
	0, 0, 489, 59, 58, 60, 61, 74, 121, 0,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 149, 150,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 84, 85, 73, 0, 106,
	107, 127, 89, 122, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 0, 0, 0, 0, 64, 46, 98,
	0, 0, 868, 59, 58, 60, 61, 74, 121, 0,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 149, 150,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 84, 85, 73, 0, 106,
	107, 127, 89, 122, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 0, 0, 0, 0, 64, 46, 98,
	0, 0, 631, 59, 58, 60, 61, 74, 121, 0,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 149, 150,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 84, 85, 73, 0, 106,
	107, 127, 89, 122, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 0, 0, 0, 0, 64, 46, 98,
	0, 0, 629, 59, 58, 60, 61, 74, 121, 0,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 149, 150,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 84, 85, 73, 0, 106,
	107, 127, 89, 122, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 0, 0, 0, 0, 64, 46, 98,
	0, 0, 293, 59, 58, 60, 61, 74, 121, 0,
	82, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 97, 0, 95, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	144, 114, 110, 104, 0, 86, 87, 88, 0, 0,
	0, 0, 81, 54, 0, 0, 0, 79, 43, 150,
	0, 0, 0, 0, 0, 56, 57, 0, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 84, 85, 73,
	0, 106, 107, 127, 89, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 78, 0, 0, 0, 0, 64, 432, 98,
	46, 0, 0, 59, 58, 60, 61, 74, 121, 0,
	0, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	149, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 84, 85, 73,
	0, 106, 107, 127, 89, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 0, 0, 0, 0, 64,
	46, 98, 0, 0, 408, 59, 58, 60, 61, 74,
	121, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	149, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 84, 85, 73,
	0, 106, 107, 127, 89, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 0, 0, 0, 389, 64,
	46, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	149, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 84, 85, 73,
	0, 106, 107, 127, 89, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 0, 0, 153, 0, 64,
	46, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	149, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 84, 85, 73,
	0, 106, 107, 127, 89, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 0, 0, 151, 0, 64,
	46, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	149, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 84, 85, 73,
	0, 106, 107, 127, 89, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 0, 0, 147, 0, 64,
	46, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	149, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 84, 85, 73,
	0, 106, 107, 127, 443, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 0, 0, 0, 0, 64,
	46, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	149, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 84, 85, 73,
	0, 106, 107, 127, 89, 122, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 78, 0, 0, 0, 0, 64,
	46, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 97, 0, 95, 111, 112, 113, 108,
	109, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 144, 114, 110, 104, 0, 86, 87, 88,
	0, 0, 0, 0, 81, 54, 0, 0, 0, 79,
	43, 150, 0, 0, 0, 0, 0, 56, 57, 0,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 170,
	172, 171, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 843, 0, 93, 78, 0, 0, 844, 0, 64,
	842, 98, 0, 0, 0, 59, 58, 60, 61, 74,
	121, 168, 169, 180, 183, 184, 185, 186, 187, 188,
	190, 192, 0, 0, 0, 864, 170, 172, 171, 193,
	0, 0, 194, 174, 178, 177, 0, 0, 0, 0,
	0, 173, 0, 175, 179, 181, 182, 189, 191, 176,
	0, 849, 850, 851, 848, 847, 846, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 668, 669, 168, 169,
	180, 183, 184, 185, 186, 187, 188, 190, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 859, 194,
	174, 178, 177, 796, 0, 0, 835, 0, 173, 0,
	175, 179, 181, 182, 189, 191, 176, 672, 671, 659,
	665, 666, 673, 674, 675, 676, 679, 680, 0, 0,
	0, 0, 670, 668, 669, 799, 655, 0, 681, 663,
	657, 656, 0, 0, 0, 0, 0, 662, 0, 664,
	658, 660, 661, 677, 678, 667, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 671, 659, 665, 666, 673,
	674, 675, 676, 679, 680, 170, 172, 171, 193, 0,
	0, 0, 0, 655, 0, 681, 663, 657, 656, 0,
	0, 0, 0, 0, 662, 0, 664, 658, 660, 661,
	677, 678, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 169, 180,
	183, 184, 185, 186, 187, 188, 190, 192, 170, 172,
	171, 193, 0, 0, 0, 0, 0, 0, 194, 174,
	178, 177, 0, 0, 0, 0, 0, 173, 0, 175,
	179, 181, 182, 189, 191, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 169, 180, 183, 184, 185, 186, 187, 188, 190,
	192, 0, 0, 0, 754, 170, 172, 171, 193, 0,
	0, 194, 174, 178, 177, 0, 0, 0, 0, 0,
	173, 0, 175, 179, 181, 182, 189, 191, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 169, 180,
	183, 184, 185, 186, 187, 188, 190, 192, 0, 0,
	0, 710, 170, 172, 171, 193, 0, 0, 194, 174,
	178, 177, 0, 0, 0, 0, 0, 173, 0, 175,
	179, 181, 182, 189, 191, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 169, 180, 183, 184, 185,
	186, 187, 188, 190, 192, 0, 0, 0, 645, 170,
	172, 171, 193, 0, 0, 194, 174, 178, 177, 0,
	0, 0, 0, 0, 173, 0, 175, 179, 181, 182,
	189, 191, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 169, 180, 183, 184, 185, 186, 187, 188,
	190, 192, 0, 0, 0, 642, 170, 172, 171, 193,
	0, 0, 194, 174, 178, 177, 0, 0, 0, 0,
	0, 173, 0, 175, 179, 181, 182, 189, 191, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 169,
	180, 183, 184, 185, 186, 187, 188, 190, 192, 170,
	172, 171, 193, 0, 0, 0, 624, 0, 0, 194,
	174, 178, 177, 0, 0, 0, 0, 0, 173, 0,
	175, 179, 181, 182, 189, 191, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 169, 180, 183, 184, 185, 186, 187, 188,
	190, 192, 170, 172, 171, 193, 0, 0, 0, 623,
	0, 0, 194, 174, 178, 177, 0, 0, 0, 0,
	0, 173, 0, 175, 179, 181, 182, 189, 191, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 169, 180, 183, 184, 185,
	186, 187, 188, 190, 192, 0, 0, 0, 604, 170,
	172, 171, 193, 0, 0, 194, 174, 178, 177, 0,
	0, 0, 0, 0, 173, 0, 175, 179, 181, 182,
	189, 191, 176, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 169, 180, 183, 184, 185, 186, 187, 188,
	190, 192, 170, 172, 171, 193, 0, 555, 0, 0,
	0, 0, 194, 174, 178, 177, 0, 0, 0, 0,
	0, 173, 0, 175, 179, 181, 182, 189, 191, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 169, 180, 183, 184, 185,
	186, 187, 188, 190, 192, 170, 172, 171, 193, 0,
	0, 0, 0, 0, 0, 194, 174, 178, 177, 0,
	0, 0, 0, 0, 173, 0, 175, 179, 181, 182,
	189, 191, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 168, 169, 180,
	183, 184, 185, 186, 187, 188, 190, 192, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 0, 194, 174,
	178, 177, 170, 172, 171, 193, 0, 173, 0, 175,
	179, 181, 182, 189, 191, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 169, 180, 183, 184, 185,
	186, 187, 188, 190, 192, 170, 172, 171, 193, 0,
	0, 0, 0, 0, 0, 194, 174, 178, 177, 0,
	0, 0, 0, 0, 173, 0, 175, 179, 181, 182,
	189, 191, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 169, 180,
	183, 184, 185, 186, 187, 188, 190, 192, 170, 172,
	171, 193, 398, 0, 0, 0, 0, 0, 194, 174,
	178, 177, 0, 0, 0, 0, 0, 173, 0, 175,
	179, 181, 182, 189, 191, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 169, 180, 183, 184, 185, 186, 187, 188, 190,
	192, 170, 172, 171, 193, 348, 0, 0, 0, 0,
	0, 194, 174, 178, 177, 0, 0, 0, 0, 0,
	173, 0, 175, 179, 181, 182, 189, 191, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 169, 180, 183, 184, 185, 186,
	187, 188, 190, 192, 170, 172, 171, 193, 347, 0,
	0, 0, 0, 0, 194, 174, 178, 177, 0, 0,
	0, 0, 0, 173, 0, 175, 179, 181, 182, 189,
	191, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 668, 669, 168, 169, 180, 183,
	184, 185, 186, 187, 188, 190, 192, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 194, 174, 178,
	177, 0, 0, 0, 0, 0, 173, 0, 175, 179,
	181, 182, 189, 191, 176, 672, 671, 659, 665, 666,
	673, 674, 675, 676, 679, 680, 170, 172, 171, 193,
	0, 0, 0, 0, 655, 0, 681, 663, 657, 656,
	0, 0, 0, 0, 0, 662, 0, 664, 658, 660,
	661, 677, 678, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 169,
	180, 183, 184, 185, 186, 187, 188, 190, 192, 171,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	174, 178, 177, 0, 0, 0, 0, 0, 173, 0,
	175, 179, 181, 182, 189, 191, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	169, 180, 183, 184, 185, 186, 187, 188, 190, 192,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 174, 178, 177, 0, 0, 0, 0, 0, 173,
	0, 175, 179, 181, 182, 189, 191, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	169, 180, 183, 184, 185, 186, 187, 188, 190, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 178, 177, 0, 0, 0, 0, 0, 173,
	0, 175, 179, 181, 182, 189, 191, 176, 671, 659,
	665, 666, 673, 674, 675, 676, 679, 680, 193, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 663,
	657, 656, 0, 0, 0, 0, 0, 662, 0, 664,
	658, 660, 661, 677, 678, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 180,
	183, 184, 185, 186, 187, 188, 190, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	178, 177, 0, 0, 0, 0, 0, 173, 0, 175,
	179, 181, 182, 189, 191, 176, 659, 665, 666, 673,
	674, 675, 676, 679, 680, 193, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 663, 657, 656, 0,
	0, 0, 0, 0, 662, 0, 664, 658, 660, 661,
	677, 678, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 183, 184, 185,
	186, 187, 188, 190, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 178, 177, 0,
	0, 0, 0, 0, 173, 0, 175, 179, 181, 182,
	189, 191, 176, 659, 665, 666, 673, 674, 675, 676,
	679, 680, 193, 0, 0, 0, 0, 0, 0, 0,
	655, 0, 0, 663, 657, 656, 0, 0, 0, 0,
	0, 0, 0, 664, 658, 660, 661, 677, 678, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 180, 183, 184, 185, 186, 187, 188,
	190, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 178, 177, 0, 0, 0, 0,
	0, 0, 0, 175, 179, 181, 182, 189, 191, 176,
	180, 183, 184, 185, 186, 187, 188, 190, 192, 106,
	107, 127, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 178, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 181, 182, 189, 191, 176, 106, 107, 127,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 0, 528, 111, 112, 113, 108, 109, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 0,
	523, 114, 110, 524, 0, 0, 0, 0, 0, 525,
	0, 528, 111, 112, 113, 108, 109, 0, 0, 234,
	0, 0, 0, 531, 0, 0, 0, 0, 523, 114,
	110, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 537, 0, 526,
	0, 0, 0, 536, 535, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 0, 526, 0, 0,
	0, 536, 535, 533, 534,
}
var yyPact = [...]int{

	-1000, -1000, 2483, -1000, -1000, 262, -1000, -1000, -1000, -1000,
	468, 553, 33, -1000, 270, -1000, -1000, 900, -1000, 182,
	182, 5591, 243, 182, 6803, 6693, 6583, 325, 152, 762,
	6913, -1000, 8197, 242, 241, 240, -1000, 360, 6913, 897,
	-11, 896, 894, 6913, -1000, -1000, -1000, -1000, 662, -1000,
	654, -1000, 1425, 236, 6913, 416, 384, 384, 6913, 6913,
	6913, 6913, -1000, -1000, 7133, -1000, 6913, 6913, 6913, 6913,
	6913, 6913, 6913, 232, 6913, -1000, 116, 114, 845, 6913,
	639, 613, 231, 230, 6913, 6913, 229, 6913, 6913, -1000,
	109, -1000, -1000, 731, 696, -1000, 108, 228, 6141, -1000,
	107, 106, -1000, 224, 805, 528, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 55, 151, -1000, 526, 186,
	-1000, 357, -1000, 178, 289, -1000, 805, -1000, 32, 572,
	547, -1000, 563, 805, -1000, 849, -1000, -80, 4511, 5437,
	7133, 5283, 719, -11, 483, 6913, 227, -1000, 8144, -1000,
	695, -1000, 8091, -1000, 324, 1181, 8289, -1000, 31, -1000,
	-1000, 301, 21, -11, -82, 12, 8289, -1000, 6913, 6913,
	6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913,
	6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913,
	6913, 6913, 6913, 613, 6473, 384, 6913, 846, -1000, 8038,
	318, 288, -1000, 645, 565, -1000, 1425, 7985, -1000, -1000,
	6363, 6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913, 6913,
	6913, 6913, 6913, 302, -1000, -1000, -1000, -1000, -1000, 224,
	460, 805, 522, 521, -1000, -1000, 375, 375, 415, 375,
	175, 7918, 171, 375, 375, 375, 375, 375, 375, 375,
	-1000, 6251, -1000, 375, 6913, 6913, 363, 717, 725, -1000,
	201, 7023, 384, 1364, 89, 186, 518, -1000, 434, 458,
	805, 637, 55, 151, 506, 6913, 6913, 8289, 8289, 6913,
	8289, 8289, 6913, 455, 717, 708, -1000, 685, 6913, 6141,
	96, -23, 7865, 384, 6913, 6913, 833, -1000, 1705, 224,
	57, 6913, 6913, 55, 357, 92, -1000, 6913, 317, -1000,
	-1000, 2327, 224, -1000, 605, 3, -1000, 554, 805, -3,
	-1000, 546, 805, 832, 545, -83, 8849, -1000, -1000, -1000,
	-1000, -1000, -1000, 222, -1000, -1000, -1000, -1000, -1000, 182,
	213, 316, -29, 8289, -1000, 311, 310, -1000, -1000, -1000,
	-1000, -1000, 152, -1000, 6913, -1000, -1000, 780, 212, 8849,
	-1000, 6913, 8478, 8565, 983, 1364, 8340, 8652, 8689, 1844,
	-18, -18, -18, 415, 375, 415, 415, 283, 283, 701,
	701, 701, 701, 128, 128, 128, 128, -1000, 7812, 6913,
	2, -1000, -1000, 2326, 707, 1, -84, 4355, -1000, -1000,
	208, 552, 555, 562, 354, 562, 6913, 1364, 319, 1364,
	1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364,
	1364, -5, -1000, -1000, 207, 805, 224, 89, 89, 187,
	-1000, -1000, -1000, 93, 8289, 84, -1000, -1000, -1000, -1000,
	838, 828, 7755, 100, 338, 186, 99, -1000, -1000, 55,
	151, -1000, 6913, -1000, -1000, 145, 805, 434, 89, 55,
	145, -15, -1000, 1425, -1000, 1613, 7702, 7649, 74, -1000,
	-1000, -1000, 71, 170, -1000, -1000, 6031, 5921, -1000, -1000,
	70, 53, -1000, -1000, -21, 153, -1000, -1000, 1425, 384,
	6913, -1000, 186, 186, -1000, -1000, 52, 7592, 186, 186,
	-1000, 7535, -1000, 2171, -1000, -1000, -1000, -1000, 572, 827,
	525, -1000, 547, 826, 516, -1000, 821, 8849, -1000, 8236,
	-1000, -1000, 434, 444, 805, 206, 8849, -1000, -1000, -1000,
	-1000, 626, 503, 8849, 8849, 8849, 8849, 8849, 150, 435,
	4667, 4199, 307, 6913, 6913, 396, -1000, 778, -1000, -1000,
	7478, -85, 552, -1000, 8289, 6913, 8390, 305, 384, 905,
	905, 5129, 813, 8849, 689, 552, 149, -30, -1000, -11,
	-1000, -1000, -1000, 434, 437, 805, 352, 562, -1000, -1000,
	-65, -1000, -1000, 1425, -1000, 613, -86, 302, 302, 224,
	-1000, -1000, 156, 598, 6913, -1000, 89, -1000, -1000, 51,
	-1000, -1000, -1000, -1000, -1000, -1000, 6913, -1000, -1000, 105,
	104, -1000, 6913, 6913, 55, 7421, -1000, 434, -1000, -1000,
	-1000, 6913, -1000, -1000, -1000, -1000, -1000, -1000, 7368, 384,
	8289, 384, -1000, -1000, -1000, 5701, -1000, -1000, 8289, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 810,
	-1000, -1000, 808, -1000, -1000, 8849, 8849, 8849, 8849, 8849,
	8849, 8849, 8849, 8849, 8849, 8849, 8849, 8849, 8849, 8849,
	8849, 8849, 8849, 8849, 8849, 8849, 8849, 8849, 8849, 8849,
	8849, 8821, 805, 434, 8849, 46, -50, 7315, 519, 706,
	67, 67, -78, -78, 7258, 300, -1000, 182, 5591, 430,
	298, -1000, 296, 8289, -1000, 6913, 194, 387, 295, 714,
	-1000, 8849, 146, 8390, -1000, -1000, 558, -1000, 384, 190,
	558, -1000, -1000, -1000, -87, -1000, 681, 188, 142, 678,
	552, 427, 805, 434, -1000, -65, 7233, 562, 186, 6913,
	-1000, -55, 6913, 598, -1000, 44, 186, -1000, 7219, 598,
	6913, 6913, 39, 7162, -1000, 567, -1000, 5811, -1000, -1000,
	-1000, -1000, -1000, 1943, -78, -78, 67, 67, 67, 67,
	8602, 73, 1988, 120, 120, -78, 1792, 1130, 1242, 8515,
	8428, -42, -42, -42, -42, 19, 19, 19, 19, 8849,
	1904, 434, 141, -1000, -1000, 8849, 8849, -1000, -1000, -1000,
	-1000, 5591, -1000, 419, 182, 267, -1000, 6913, 1184, -1000,
	-1000, -1000, -1000, -1000, 294, -1000, 678, 132, 905, -1000,
	302, 130, 4043, 8849, -1000, 351, 562, 347, 346, 180,
	-1000, 774, -1000, 434, 2015, -1000, -1000, 770, -25, -1000,
	695, 549, -1000, 803, 562, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1364, -1000, 38, -1000, -1000, 336,
	-1000, 35, 20, -1000, -1000, -1000, 89, 8289, 384, -1000,
	1497, 8849, -1000, 1741, 8236, -1000, 293, 195, -1000, 123,
	-1000, 4667, -1000, 345, 4975, -1000, -60, 4975, 286, -1000,
	-1000, 768, -1000, -1000, 173, -89, -1000, -44, -94, -1000,
	794, -11, -1000, -96, -79, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1497, 8849, -1000, -1000, 4667, 4821, 4667, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3887, 122, 3731, 3575,
	-64, -1000, 767, 8849, -1000, 763, 8849, -98, 790, 8849,
	-1000, 562, -1000, 607, 8236, 4667, -1000, -1000, -1000, 3419,
	3263, -1000, 344, -1000, -1000, -1000, 154, -1000, -1000, -100,
	-1000, 8849, 174, -1000, -1000, 334, 607, -1000, 281, 279,
	672, 697, 490, -1000, 3107, -1000, 277, -1000, -1000, 757,
	8849, -1000, 552, -1000, -1000, -1000, -1000, 562, 549, 788,
	189, -1000, 2951, -1000, -1000, 119, -70, -1000, 785, -1000,
	-1000, -1000, 683, 274, 562, -1000, -1000, 683, -1000, 121,
	-1000, -1000, -1000, -1000, -1000, 562, 2795, 756, -1000, 75,
	341, -1000, 2639, -1000,
}
var yyPgo = [...]int{

	0, 29, 1094, 23, 21, 1093, 49, 40, 39, 573,
	1092, 1090, 56, 217, 228, 432, 1391, 68, 54, 61,
	709, 1428, 1088, 33, 1087, 1085, 1084, 136, 1083, 50,
	37, 1082, 1076, 1075, 1074, 107, 1069, 1068, 24, 1067,
	26, 45, 42, 1065, 699, 35, 1064, 1, 1063, 1061,
	7, 1060, 51, 44, 43, 1059, 1058, 1057, 34, 1055,
	1053, 4, 1050, 1048, 1044, 19, 1043, 1042, 1039, 1035,
	48, 5, 1034, 1031, 1030, 1029, 1028, 2, 1026, 543,
	1025, 17, 605, 1023, 1020, 1019, 13, 1015, 1009, 6,
	20, 1002, 1001, 1000, 997, 9, 52, 0, 995, 994,
	993, 117, 992, 990, 508, 985, 982, 55, 8, 978,
	976, 973, 970, 14, 38, 969, 966, 965, 963, 961,
	960, 3, 957, 22, 955, 954, 953, 30, 952, 951,
	950, 949, 941, 939, 935, 18, 932, 931, 928, 25,
	926, 15, 16, 925, 41, 924, 920, 919, 916, 36,
	10, 913, 855,
}
var yyR1 = [...]int{

	0, 152, 152, 96, 96, 97, 97, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 91, 98,
	98, 6, 6, 6, 6, 99, 99, 7, 7, 7,
	7, 100, 100, 8, 8, 8, 8, 55, 55, 101,
	101, 26, 26, 26, 26, 26, 27, 27, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 118, 118, 60, 60,
	119, 119, 120, 120, 61, 116, 116, 58, 53, 54,
	150, 150, 151, 151, 62, 63, 63, 66, 66, 66,
	66, 92, 92, 2, 94, 94, 93, 93, 127, 127,
	90, 90, 89, 89, 89, 87, 87, 86, 86, 59,
	59, 117, 117, 84, 84, 84, 84, 114, 114, 114,
	4, 4, 88, 88, 110, 110, 111, 111, 56, 56,
	57, 57, 121, 121, 122, 122, 65, 65, 64, 64,
	64, 64, 82, 82, 82, 128, 128, 70, 70, 70,
	70, 102, 102, 29, 29, 29, 103, 103, 103, 103,
	123, 123, 67, 67, 67, 67, 69, 129, 129, 83,
	83, 130, 130, 131, 131, 71, 71, 72, 132, 132,
	75, 75, 74, 73, 73, 76, 76, 85, 85, 124,
	124, 125, 125, 133, 133, 77, 77, 77, 77, 77,
	77, 126, 126, 126, 126, 68, 68, 115, 115, 113,
	113, 112, 112, 139, 139, 137, 137, 138, 138, 138,
	140, 140, 44, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 52, 52, 52,
	52, 49, 49, 49, 49, 48, 48, 1, 95, 95,
	109, 109, 109, 109, 25, 25, 25, 25, 25, 25,
	25, 25, 13, 13, 13, 13, 47, 47, 47, 45,
	45, 43, 43, 147, 147, 146, 51, 51, 51, 134,
	134, 134, 81, 81, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 30, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 37, 37, 37, 37, 31, 31, 31, 31, 31,
	31, 31, 135, 135, 3, 3, 136, 136, 136, 136,
	16, 16, 50, 50, 18, 19, 20, 21, 21, 148,
	148, 141, 143, 143, 78, 142, 142, 142, 42, 42,
	46, 46, 14, 24, 24, 22, 22, 22, 23, 23,
	23, 12, 12, 12, 11, 11, 15, 15, 144, 144,
	145, 145, 145, 41, 41, 149, 149, 108, 108, 40,
	40, 40, 107, 107, 106, 106, 106, 106, 106, 106,
	106, 106, 104, 104, 104, 104, 35, 35, 35, 35,
	35, 35, 35, 36, 36, 36, 39, 39, 39, 39,
	39, 39, 39, 39, 105, 105, 38, 38, 32, 32,
	33, 34,
}
var yyR2 = [...]int{

	0, 1, 2, 2, 0, 1, 3, 1, 1, 1,
	1, 3, 5, 4, 3, 4, 4, 2, 4, 3,
	1, 1, 3, 2, 4, 3, 1, 1, 3, 2,
	4, 3, 1, 1, 3, 2, 4, 5, 4, 2,
	0, 1, 1, 1, 1, 4, 1, 2, 3, 5,
	8, 3, 5, 9, 3, 2, 3, 2, 3, 2,
	3, 3, 2, 3, 3, 3, 1, 2, 5, 8,
	8, 5, 1, 6, 3, 3, 0, 9, 0, 4,
	1, 0, 1, 2, 8, 1, 3, 1, 1, 1,
	0, 1, 0, 1, 9, 7, 6, 1, 2, 1,
	2, 0, 2, 1, 0, 2, 0, 2, 1, 3,
	0, 2, 1, 2, 4, 1, 4, 1, 4, 1,
	4, 3, 5, 3, 4, 4, 5, 0, 5, 4,
	1, 1, 1, 4, 0, 4, 0, 5, 0, 2,
	0, 3, 1, 0, 1, 3, 4, 6, 0, 1,
	1, 1, 2, 3, 3, 1, 3, 1, 1, 2,
	2, 3, 1, 1, 2, 4, 3, 5, 1, 3,
	2, 0, 3, 2, 1, 8, 3, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 2, 3, 1, 3,
	1, 1, 3, 4, 3, 0, 1, 1, 3, 1,
	1, 0, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 5, 4, 3, 1, 0,
	1, 3, 1, 2, 1, 4, 3, 2, 1, 1,
	0, 1, 3, 6, 3, 4, 6, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 4, 5, 4, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 9, 10, 2, 2, 4,
	4, 4, 4, 4, 4, 4, 3, 1, 0, 4,
	3, 4, 1, 2, 2, 4, 3, 4, 4, 4,
	4, 2, 1, 1, 3, 2, 1, 3, 2, 1,
	1, 4, 1, 2, 0, 2, 0, 2, 1, 0,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 3, 1, 1, 1,
	1, 3, 2, 4, 3, 1, 1, 1, 4, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 2, 2,
	3, 1, 1, 3, 2, 1, 1, 1, 1, 3,
	3, 1, 0, 2, 0, 1, 5, 3, 3, 1,
	1, 1, 3, 3, 1, 1, 1, 5, 1, 2,
	0, 3, 4, 4, 1, 1, 1, 0, 1, 2,
	3, 3, 1, 4, 4, 1, 1, 1, 1, 2,
	1, 4, 4, 1, 1, 4, 0, 1, 1, 1,
	4, 4, 1, 1, 3, 1, 2, 3, 1, 1,
	4, 0, 0, 2, 5, 3, 3, 1, 6, 4,
	4, 2, 2, 2, 1, 2, 1, 4, 3, 3,
	3, 6, 3, 1, 1, 1, 4, 4, 4, 2,
	2, 4, 2, 2, 1, 3, 1, 1, 3, 3,
	3, 3,
}
var yyChk = [...]int{

	-1000, -152, -96, -91, -5, 51, 2, -27, -53, -54,
	79, 44, -55, -28, 10, -62, -63, 38, 142, 7,
	21, 20, 23, 30, 34, 35, 39, -52, 46, 98,
	19, 14, -16, 48, 25, 27, 144, 40, 43, 36,
	-1, -66, -2, 97, -18, -17, 37, 52, 99, 53,
	100, 54, -21, 59, 92, -20, 104, 105, 153, 152,
	154, 155, -50, -44, 146, -39, 107, 108, 109, 110,
	111, 112, 113, 6, 156, -31, -49, -48, 141, 96,
	-22, 91, 49, 50, 4, 5, 84, 85, 86, 11,
	-37, -34, -9, 140, 74, 62, 18, 60, 148, -23,
	-24, -25, -32, -97, 82, -13, 8, 9, 66, 67,
	81, 63, 64, 65, 80, -12, -149, -46, -14, -42,
	-11, 157, 12, 146, -97, 142, 82, 10, -98, 37,
	38, -6, -97, 82, 144, 158, 145, 10, -101, -50,
	146, -50, -27, -1, 79, 146, -50, 144, -16, 97,
	98, 144, -16, 144, -17, -21, -16, 144, -102, -29,
	12, 157, -103, -1, 12, -115, -16, 144, 129, 130,
	87, 89, 88, 159, 151, 161, 167, 153, 152, 162,
	131, 163, 164, 132, 133, 134, 135, 136, 137, 165,
	138, 166, 139, 90, 150, 146, 146, 146, 142, -16,
	10, -150, 151, 10, 10, -17, -21, -16, 52, 52,
	160, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 146, -16, 104, 105, -20, -21, -97,
	79, 82, -13, -14, 98, -20, -16, -16, -16, -16,
	-44, -16, -52, -16, -16, -16, -16, -16, -16, -16,
	-51, 146, -50, -16, 148, 148, -134, 17, -104, -35,
	12, 76, 77, -16, 57, -45, -13, -43, -97, 79,
	82, -23, -12, -149, -14, 146, 146, -16, -16, 146,
	-16, -16, 148, -104, 17, 17, 75, -104, 148, 146,
	-107, -106, -16, 151, 148, 148, 82, -82, 146, -97,
	78, 148, 142, -12, 157, 78, -82, 142, 147, 144,
	142, -96, -97, 144, 158, -99, -7, -97, 82, -100,
	-8, -97, 82, 29, -97, 10, 160, -26, 143, 2,
	-27, -53, -54, 51, -27, 145, -88, -27, 145, 21,
	-150, -113, -112, -16, -84, 142, 145, 144, 144, 144,
	144, 144, 158, -18, 142, -21, 144, 158, -150, 160,
	144, 158, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -45, -16, 145,
	-116, -58, -21, -21, -17, -117, 10, -101, 144, 144,
	10, 146, -92, 55, -94, 55, 58, -16, 151, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -108, -40, -21, 59, 82, -97, 78, 78, 147,
	147, 147, 147, -15, -16, -15, 141, -35, -35, 17,
	148, 57, -16, 11, -21, -144, -145, -42, -41, -12,
	-149, 10, 142, -81, -82, 78, 82, -97, 57, -12,
	78, -105, -38, -21, -17, -21, -16, -16, -15, 140,
	75, 75, -15, -107, 149, -3, 158, 58, -19, -21,
	-15, -15, 10, 147, -128, -52, -70, -17, -21, 151,
	83, -82, -41, -42, 10, 52, -15, -16, -41, -42,
	10, -16, 144, -96, 143, -82, -6, 144, 158, 29,
	-97, 144, 158, 29, -97, 10, 29, 160, -30, -79,
	-9, -33, -97, 79, 82, 60, 148, -10, 62, -80,
	18, 74, -13, 154, 155, 153, 152, 146, 146, -110,
	-101, -101, -50, 144, 158, -114, 144, -114, 144, -29,
	-16, 12, 146, -30, -16, 145, -16, 147, 158, 29,
	29, 147, 158, 160, 143, 146, -121, -122, -65, -64,
	60, 61, -47, -97, 79, 82, -93, 56, -47, 142,
	-127, -47, -17, -21, -21, 91, 147, 158, 146, -97,
	-140, -138, -137, -139, 148, -141, 57, 149, 149, -36,
	10, 13, 12, 10, 143, 143, 148, 143, -142, -78,
	-143, -82, 148, 142, -12, -16, -42, -97, -144, -42,
	147, 158, 147, 147, 147, 149, 149, 147, -16, 151,
	-16, 151, 149, 149, 147, 158, 147, -19, -16, -82,
	-82, 149, 143, -82, -82, 143, 143, -7, 10, 29,
	-8, 10, 29, 10, -30, 148, 153, 152, 162, 131,
	163, 164, 159, 151, 161, 132, 133, 167, 88, 89,
	87, 130, 129, 134, 135, 136, 137, 165, 166, 138,
	139, 150, 82, -97, 146, -135, -136, -79, 17, 78,
	-79, -79, -79, -79, -79, 147, -56, 93, 94, -111,
	22, 144, -113, -16, 143, 32, 33, -114, 31, -114,
	143, 160, -121, -16, 144, -58, -89, -21, 151, 59,
	-89, -59, -27, 145, 10, -30, -118, 41, -121, 147,
	158, -150, 82, -97, 142, -127, -123, 158, -45, 160,
	-40, -108, 148, -139, -141, -15, -144, 149, -16, -148,
	148, 148, -15, -16, 143, -147, -38, 58, -19, -19,
	-70, 10, 10, -79, -79, -79, -79, -79, -79, -79,
	-79, -79, -79, -79, -79, -79, -79, -79, -79, -79,
	-79, -79, -79, -79, -79, -79, -79, -79, -79, 145,
	-79, -97, -135, 149, -3, 158, 58, 10, 52, 147,
	144, -50, -27, -57, 93, 94, 144, 144, -16, -4,
	145, 144, 143, 144, 31, -30, 147, -90, 58, -21,
	146, -90, -101, 160, -60, 42, 146, 147, -95, 44,
	-65, -151, 83, -97, -123, 143, -67, -124, -68, -69,
	-125, -133, 47, 38, 44, -77, 103, 102, 101, 98,
	99, 100, -47, -81, -16, 147, -15, 149, -142, 149,
	-141, -15, -15, 149, 143, -146, 57, -16, 151, 149,
	-79, 145, 147, -79, -79, -27, 95, -50, 145, -113,
	-4, -101, 144, -95, 147, -89, -108, 147, 28, -30,
	142, -47, 142, 142, 146, 12, 143, -126, 12, 144,
	158, -1, -77, 10, -129, -47, 149, 143, 149, 149,
	-144, -19, -79, 58, 144, 145, -101, 147, -101, 142,
	-86, -27, 145, 147, -86, 144, -101, 12, -101, -101,
	-109, 12, 151, 160, 144, 158, 160, 10, -150, 160,
	-83, 158, 144, 142, -79, -101, -87, -27, 145, -101,
	-101, 143, 147, 143, 143, 147, 158, 12, -30, 12,
	-30, 160, 10, -30, -47, -130, -131, -71, -72, -73,
	-74, -75, -47, 10, -101, 143, 26, 142, 12, 151,
	160, -30, 146, 143, -71, 144, 144, 45, 29, 78,
	24, 144, -101, 12, -30, -121, -132, -47, -76, -77,
	10, 144, 143, 147, 158, 10, -119, -120, -61, 41,
	-85, 144, 142, -47, -61, 146, -101, -47, 143, 12,
	147, 142, -101, 143,
}
var yyDef = [...]int{

	4, -2, -2, 2, 3, 0, 7, 8, 9, 10,
	0, 0, 0, 46, 5, 88, 89, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 66, 0, 0, 0, 0, 72, 0, 0, 0,
	90, 0, 0, 304, 430, 431, 317, 97, 0, 99,
	0, 103, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 285, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 299, 300, 301, 349, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 0, 0, 421, 356, 0, 482, 455,
	456, 457, 411, -2, 0, 0, 354, 355, 357, 358,
	359, 360, 361, 362, 363, -2, 0, 460, 0, 0,
	463, 475, 464, 0, 0, 4, 0, 5, 0, 0,
	0, 20, 21, 0, 17, 0, 47, 0, 0, 0,
	0, 0, 0, 90, 0, 219, 0, 55, 0, 304,
	332, 57, 0, 59, 431, -2, 0, 62, 0, 162,
	163, 0, 0, 90, 168, 0, 218, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 40, 0,
	0, 0, 91, 101, 104, -2, -2, 0, 98, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 481, 237, 250, 252, 251, 436, 333,
	0, 0, 0, 0, 332, 253, 271, 272, 273, 274,
	285, 0, 0, 290, 291, 292, 293, 294, 295, 296,
	297, 0, 348, 298, 466, 466, 0, 350, 351, 494,
	496, 0, 0, 303, 0, 352, 339, 340, 333, 0,
	0, 342, -2, 0, 0, 0, 0, 509, 510, 0,
	512, 513, 466, 0, 0, 0, 365, 0, 466, 482,
	0, 424, 487, 0, 466, 466, 0, 324, 0, -2,
	0, 466, 0, -2, 476, 0, 331, 0, 0, 11,
	4, 0, -2, 14, 0, 0, 26, 27, 0, 0,
	32, 33, 0, 0, 23, 0, 0, 39, 48, 41,
	42, 43, 44, 0, 134, 40, 51, 132, 40, 0,
	0, 0, 220, 222, 54, 127, 127, 56, 58, 60,
	61, 63, 0, 164, 0, 434, 64, 0, 0, 0,
	65, 0, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, -2,
	-2, -2, -2, -2, -2, -2, -2, 283, 0, 0,
	0, 85, 87, -2, 431, 0, 0, 0, 74, 75,
	0, -2, 106, 0, 0, 0, 0, 234, 0, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 0, 478, 479, 0, 0, 335, 0, 0, 230,
	432, 433, 347, 0, 467, 0, 302, 495, 492, 493,
	0, 0, 0, 415, 0, 447, 468, 469, 472, 448,
	0, 473, 0, 232, 353, 0, 0, 335, 0, 459,
	0, 0, 514, -2, -2, -2, 0, 0, 0, 419,
	364, 420, 0, 0, 316, 483, 425, 0, 491, 435,
	0, 0, 6, 152, 0, 0, 155, -2, -2, 0,
	0, 326, 0, 450, -2, 521, 0, 0, 0, 451,
	-2, 0, 18, 0, 13, 325, 19, 15, 0, 0,
	29, 16, 0, 0, 35, 22, 0, 0, 38, 367,
	368, 369, -2, 0, 0, 0, 422, 375, 376, 377,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	-2, 0, 0, 219, 0, 0, 127, 0, 127, 161,
	0, 166, -2, 169, 217, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 76, -2, 0, 142, 144, 90,
	149, 150, 151, 336, 0, 0, 0, 0, 102, 171,
	105, 108, -2, -2, 235, 0, 0, 481, 481, 334,
	286, 231, 228, 229, 466, 224, 0, 312, 311, 0,
	503, 504, 505, 498, 499, 500, 0, 502, 440, 445,
	446, 444, 466, 0, 449, 0, 450, 334, 344, 451,
	506, 0, 507, 508, 511, 314, 313, 315, 485, 0,
	486, 0, 453, 454, 153, 0, 154, 159, 160, 327,
	328, 461, 462, 329, 330, 465, 12, 25, 28, 0,
	31, 34, 0, 24, 37, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 422, 0, 424, 429, 0, 0,
	385, 386, 408, 409, 0, 0, 49, 0, 0, 140,
	0, 52, 0, 221, 123, 0, 0, 0, 0, 0,
	165, 0, 0, 287, 68, 86, 110, 112, 0, 0,
	110, 71, 119, 40, 0, 121, 78, 0, 0, 318,
	148, 92, 0, 338, 171, 107, 201, 0, 352, 0,
	477, 0, 466, 227, 223, 0, 447, 497, 0, 437,
	466, 466, 0, 0, 474, 341, 515, 0, 489, 490,
	156, 30, 36, 0, 379, 380, 381, 382, 383, 384,
	387, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	397, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	0, -2, 0, 374, 423, 425, 0, 366, 520, 410,
	45, 0, 139, 0, 0, 0, 133, 219, 0, 40,
	130, 131, 124, 125, 0, 167, 318, 0, 0, 113,
	481, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	145, 0, 93, 337, 201, 96, 170, 0, 0, 174,
	0, -2, 200, 0, 0, 203, 205, 206, 207, 208,
	209, 210, 109, 236, 233, 480, 0, 226, 441, 0,
	439, 0, 0, 470, 471, 343, 0, 484, 0, 378,
	406, 0, 373, 427, 428, 135, 0, 0, 40, 0,
	40, -2, 126, 0, 0, 111, 0, 0, 0, 122,
	40, 0, 40, 40, 0, 146, 95, 0, 213, 173,
	0, 90, 204, 0, 0, 177, 225, 501, 443, 442,
	345, 488, 407, 0, 50, 40, -2, 0, -2, 40,
	69, 117, 40, 114, 70, 120, 0, 0, 0, 0,
	0, 322, 0, 0, 172, 0, 0, 0, 0, 0,
	176, 0, 179, 181, 426, -2, 53, 115, 40, 0,
	0, 79, 0, 94, 305, 319, 0, 323, 147, 211,
	214, 0, 0, 216, 178, 0, 182, 183, 0, 0,
	191, 0, 0, -2, 0, 306, 0, 40, 320, 0,
	0, 215, -2, 180, 184, 185, 186, 0, 195, 0,
	0, 118, 0, 321, 212, 0, 187, 188, 0, -2,
	192, 116, 81, 0, 0, 193, 77, 80, 82, 0,
	175, 197, 40, 189, 83, 0, 0, 0, 198, 0,
	0, 40, 0, 84,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 154, 140, 3, 157, 164, 151, 3,
	146, 147, 162, 153, 158, 152, 167, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 145, 144,
	165, 160, 166, 150, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 148, 3, 149, 161, 3, 141, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 159, 143, 155,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:282
		{
			yylex.(*Parser).rootNode = node.NewRoot(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yylex.(*Parser).rootNode, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:289
		{
			yyDollar[1].list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).rootNode = node.NewRoot(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yylex.(*Parser).rootNode, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
			return 0
		}
	case 3:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:302
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:310
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:319
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			yyVAL.list = []node.Node{namePart}

			// save position
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(namePart, yyDollar[1].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:332
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			yyVAL.list = append(yyDollar[1].list, namePart)

			// save position
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(namePart, yyDollar[3].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:349
		{
			// error
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:356
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:362
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:368
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:374
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewNamespace(name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 12:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:389
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 13:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:405
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 14:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:419
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:432
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(useType, yyDollar[2].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 16:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:448
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(useType, yyDollar[2].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 17:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:464
		{
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 18:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:479
		{
			yyVAL.node = stmt.NewHaltCompiler()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.HaltCompilerToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 19:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:497
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:506
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:515
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 22:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:526
		{
			name := name.NewName(yyDollar[1].list)
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[3].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 23:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:543
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:557
		{
			name := name.NewName(yyDollar[2].list)
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:578
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:587
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:596
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:607
		{
			name := name.NewName(yyDollar[1].list)
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[3].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 29:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:624
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:638
		{
			name := name.NewName(yyDollar[2].list)
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 31:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:659
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:668
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:677
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:688
		{
			name := name.NewName(yyDollar[1].list)
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[3].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:705
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:719
		{
			name := name.NewName(yyDollar[2].list)
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:740
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(constList.Consts), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[4].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 38:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:760
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			constList := []node.Node{constant}
			yyVAL.node = stmt.NewConstList(constList)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ConstToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[3].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:782
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:790
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:800
		{
			// error
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:807
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:813
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:819
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:825
		{
			yyVAL.node = stmt.NewHaltCompiler()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.HaltCompilerToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:844
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:850
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewLabel(label)

			// save position
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(label, yyDollar[1].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:868
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:881
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			// save position
			if yyDollar[5].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IfToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:899
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			yyVAL.node = stmt.NewAltIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)

			// save position
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[4].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IfToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.EndifToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:916
		{
			switch n := yyDollar[3].node.(type) {
			case *stmt.While:
				n.Cond = yyDollar[2].node
			case *stmt.AltWhile:
				n.Cond = yyDollar[2].node
			}

			yyVAL.node = yyDollar[3].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.WhileToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 52:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:935
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.WhileToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 53:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:949
		{
			switch n := yyDollar[9].node.(type) {
			case *stmt.For:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			case *stmt.AltFor:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			}

			yyVAL.node = yyDollar[9].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ForToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.ForInitSemicolonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.ForCondSemicolonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:976
		{
			switch n := yyDollar[3].node.(type) {
			case *stmt.Switch:
				n.Cond = yyDollar[2].node
			case *stmt.AltSwitch:
				n.Cond = yyDollar[2].node
			default:
				panic("unexpected node type")
			}

			yyVAL.node = yyDollar[3].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SwitchToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:997
		{
			yyVAL.node = stmt.NewBreak(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BreakToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1010
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BreakToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1023
		{
			yyVAL.node = stmt.NewContinue(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ContinueToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1036
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ContinueToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1049
		{
			yyVAL.node = stmt.NewReturn(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ReturnToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1062
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ReturnToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1075
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ReturnToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1088
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1100
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.GlobalToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1113
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1126
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EchoToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1139
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.InlineHTMLToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1151
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1163
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UnsetToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1178
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				}
			}

			yyVAL.node = yyDollar[8].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ForeachToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1215
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				}
			}

			// save position
			yyVAL.node = yyDollar[8].node

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ForeachToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1252
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DeclareToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1266
		{
			yyVAL.node = stmt.NewNop()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1278
		{
			yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)

			// save position
			if yyDollar[6].node == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TryToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1296
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ThrowToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1309
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewGoto(label)

			// save position
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.GotoToken)
			yylex.(*Parser).comments.AddFromToken(label, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1328
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 77:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:1334
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[4].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(catch, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[1].token, comment.CatchToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[5].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[6].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[8].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1359
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1365
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FinallyToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1382
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1388
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1397
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1403
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1412
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[4].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.CatchToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1436
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1442
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1454
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1463
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1472
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1481
		{
			yyVAL.token = nil
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1485
		{
			yyVAL.token = yyDollar[1].token
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1492
		{
			yyVAL.token = nil
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1496
		{
			yyVAL.token = yyDollar[1].token
		}
	case 94:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:1503
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewFunction(name, yyDollar[2].token != nil, yyDollar[5].list, nil, yyDollar[8].list, "")

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FunctionToken)
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[9].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1528
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			switch n := yyDollar[1].node.(type) {
			case *stmt.Class:
				n.ClassName = name
				n.Stmts = yyDollar[6].list
				n.Extends = yyDollar[3].ClassExtends
				n.Implements = yyDollar[4].ClassImplements

			case *stmt.Trait:
				// TODO: is it possible that trait extend or implement
				n.TraitName = name
				n.Stmts = yyDollar[6].list
			}
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[7].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 96:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1556
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewInterface(name, yyDollar[3].InterfaceExtends, yyDollar[5].list, "")

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1576
		{
			yyVAL.node = stmt.NewClass(nil, nil, nil, nil, nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ClassToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1588
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(classModifier, yyDollar[1].token, comment.AbstractToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ClassToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1603
		{
			yyVAL.node = stmt.NewTrait(nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TraitToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1615
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(classModifier, yyDollar[1].token, comment.FinalToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ClassToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1633
		{
			yyVAL.ClassExtends = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1639
		{
			yyVAL.ClassExtends = stmt.NewClassExtends(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.ClassExtends, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.ClassExtends, yyDollar[1].token, comment.ExtendsToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1654
		{
			yyVAL.token = yyDollar[1].token
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1661
		{
			yyVAL.InterfaceExtends = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1667
		{
			yyVAL.InterfaceExtends = stmt.NewInterfaceExtends(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.InterfaceExtends, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.InterfaceExtends, yyDollar[1].token, comment.ExtendsToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1682
		{
			yyVAL.ClassImplements = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1688
		{
			yyVAL.ClassImplements = stmt.NewClassImplements(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.ClassImplements, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.ClassImplements, yyDollar[1].token, comment.ImplementsToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1703
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1709
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1721
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1727
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoubleArrowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1739
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1745
		{
			yyVAL.node = expr.NewReference(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyDollar[2].node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1757
		{
			yyVAL.node = expr.NewList(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ListToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1774
		{
			yyVAL.node = stmt.NewFor(nil, nil, nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1783
		{
			stmtList := stmt.NewStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltFor(nil, nil, nil, stmtList)

			// save position
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EndforToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1802
		{
			yyVAL.node = stmt.NewForeach(nil, nil, nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1811
		{
			stmtList := stmt.NewStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltForeach(nil, nil, nil, stmtList)

			// save position
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EndforeachToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1831
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1837
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EnddeclareToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1855
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			yyVAL.list = []node.Node{constant}

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[1].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[2].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1871
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yyVAL.list = append(yyDollar[1].list, constant)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[4].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1892
		{
			caseList := stmt.NewCaseList(yyDollar[2].list)
			yyVAL.node = stmt.NewSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[3].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1907
		{
			caseList := stmt.NewCaseList(yyDollar[3].list)
			yyVAL.node = stmt.NewSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[2].token, comment.SemiColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1923
		{
			caseList := stmt.NewCaseList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[3].token, comment.EndswitchToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1939
		{

			caseList := stmt.NewCaseList(yyDollar[3].list)
			yyVAL.node = stmt.NewAltSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[2].token, comment.SemiColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[4].token, comment.EndswitchToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1961
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1967
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			yyVAL.list = append(yyDollar[1].list, _case)

			// save position
			yylex.(*Parser).positions.AddPosition(_case, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_case, yyDollar[2].token, comment.CaseToken)
			yylex.(*Parser).comments.AddFromToken(_case, yyDollar[4].token, comment.CaseSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1981
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			yyVAL.list = append(yyDollar[1].list, _default)

			// save position
			yylex.(*Parser).positions.AddPosition(_default, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_default, yyDollar[2].token, comment.DefaultToken)
			yylex.(*Parser).comments.AddFromToken(_default, yyDollar[3].token, comment.CaseSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1999
		{
			yyVAL.token = yyDollar[1].token
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2003
		{
			yyVAL.token = yyDollar[1].token
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2011
		{
			yyVAL.node = stmt.NewWhile(nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2020
		{
			stmtList := stmt.NewStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltWhile(nil, stmtList)

			// save position
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EndwhileToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2041
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2047
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			yyVAL.list = append(yyDollar[1].list, _elseIf)

			// save position
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_elseIf, yyDollar[2].token, comment.ElseifToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2064
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2070
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			yyVAL.list = append(yyDollar[1].list, _elseIf)

			// save position
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list))
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_elseIf, yyDollar[2].token, comment.ElseifToken)
			yylex.(*Parser).comments.AddFromToken(_elseIf, yyDollar[4].token, comment.ColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2090
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2096
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ElseToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2112
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2118
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			yyVAL.node = stmt.NewAltElse(stmts)

			// save position
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ElseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2137
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2143
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2152
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2158
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2170
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[4].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].token != nil, yyDollar[3].token != nil)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			} else if yyDollar[2].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token))
			} else if yyDollar[3].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			}

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EllipsisToken)
			}
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2200
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[4].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].token != nil, yyDollar[3].token != nil)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
			} else if yyDollar[2].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node))
			} else if yyDollar[3].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
			}

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EllipsisToken)
			}
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2235
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2241
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2253
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.CallableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2265
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2275
		{
			yyVAL.node = node.NewArgumentList(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2288
		{
			yyVAL.node = node.NewArgumentList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2301
		{
			arg := node.NewArgument(yyDollar[2].node, false, false)
			yyVAL.node = node.NewArgumentList([]node.Node{arg})

			// save position
			yylex.(*Parser).positions.AddPosition(arg, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2320
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2326
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2338
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2347
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2356
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, false, true)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2368
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EllipsisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2383
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2392
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2402
		{
			name := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2416
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2428
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2446
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[3].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, nil)
			yyVAL.list = append(yyDollar[1].list, staticVar)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2464
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[3].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			yyVAL.list = append(yyDollar[1].list, staticVar)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(staticVar, yyDollar[4].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2483
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, nil)
			yyVAL.list = []node.Node{staticVar}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2500
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			yyVAL.list = []node.Node{staticVar}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(staticVar, yyDollar[2].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2522
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2528
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2538
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2550
		{
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2562
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 175:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:2568
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].token != nil, yyDollar[6].list, nil, yyDollar[8].node, "")

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			if yyDollar[1].list == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[8].node))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListNodePosition(yyDollar[1].list, yyDollar[8].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.FunctionToken)
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[4].token, comment.IdentifierToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2595
		{
			var adaptationList *stmt.TraitAdaptationList
			switch n := yyDollar[3].node.(type) {
			case *stmt.TraitAdaptationList:
				adaptationList = n
			default:
				adaptationList = nil
			}
			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, adaptationList)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2617
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2623
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2635
		{
			yyVAL.node = stmt.NewNop()

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2647
		{
			yyVAL.node = stmt.NewTraitAdaptationList(yyDollar[2].list)

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2662
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2668
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2677
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2683
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2692
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2701
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2713
		{
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.InsteadofToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2728
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2734
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2746
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewTraitMethodRef(nil, name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[1].token, comment.IdentifierToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2760
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2769
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
			yylex.(*Parser).comments.AddFromToken(target, yyDollar[3].token, comment.IdentifierToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2787
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[4].token, comment.IdentifierToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2802
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2817
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2823
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2832
		{
			yyVAL.node = stmt.NewNop()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SemiColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2844
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2860
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2866
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.list = []node.Node{modifier}

			// save position
			yylex.(*Parser).positions.AddPosition(modifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(modifier, yyDollar[1].token, comment.VarToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2882
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2888
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2897
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2903
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2912
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PublicToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2924
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ProtectedToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2936
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PrivateToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2948
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2960
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AbstractToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2972
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FinalToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2987
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[3].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, nil, "")
			yyVAL.list = append(yyDollar[1].list, property)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3005
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[3].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, yyDollar[5].node, "")
			yyVAL.list = append(yyDollar[1].list, property)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(property, yyDollar[4].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3024
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, nil, "")
			yyVAL.list = []node.Node{property}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3041
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, yyDollar[3].node, "")
			yyVAL.list = []node.Node{property}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(property, yyDollar[2].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3062
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			constList := yyDollar[1].node.(*stmt.ClassConstList)
			constList.Consts = append(constList.Consts, constant)
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).positions.AddPosition(yyDollar[1].node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(constList.Consts), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.IdentifierToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[4].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3082
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			yyVAL.node = stmt.NewClassConstList(nil, []node.Node{constant})

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ConstToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.IdentifierToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[3].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3103
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3112
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3122
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3128
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3137
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3146
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3155
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3161
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3170
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3184
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[2].node)
			yyVAL.list = []node.Node{fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[1].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[3].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3201
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3207
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3213
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3222
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3228
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3237
		{

			if yyDollar[3].node != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].node.(*node.ArgumentList))
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NewToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3256
		{
			list := expr.NewList(yyDollar[3].list)
			yyVAL.node = assign.NewAssign(list, yyDollar[6].node)

			// save position
			yylex.(*Parser).positions.AddPosition(list, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(list, yyDollar[1].token, comment.ListToken)
			yylex.(*Parser).comments.AddFromToken(list, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(list, yyDollar[4].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3273
		{
			yyVAL.node = assign.NewAssign(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.EqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3285
		{
			yyVAL.node = assign.NewReference(yyDollar[1].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.EqualToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3298
		{
			var _new *expr.New

			if yyDollar[6].node != nil {
				_new = expr.NewNew(yyDollar[5].node, yyDollar[6].node.(*node.ArgumentList))
			} else {
				_new = expr.NewNew(yyDollar[5].node, nil)
			}
			yyVAL.node = assign.NewReference(yyDollar[1].node, _new)

			// save position
			if yyDollar[6].node != nil {
				yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
			} else {
				yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[5].node))
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, _new))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.EqualToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)
			yylex.(*Parser).comments.AddFromToken(_new, yyDollar[4].token, comment.NewToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3324
		{
			yyVAL.node = expr.NewClone(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.CloneToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3336
		{
			yyVAL.node = assign.NewPlus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PlusEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3348
		{
			yyVAL.node = assign.NewMinus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MinusEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3360
		{
			yyVAL.node = assign.NewMul(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MulEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3372
		{
			yyVAL.node = assign.NewPow(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PowEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3384
		{
			yyVAL.node = assign.NewDiv(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DivEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3396
		{
			yyVAL.node = assign.NewConcat(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ConcatEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3408
		{
			yyVAL.node = assign.NewMod(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ModEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3420
		{
			yyVAL.node = assign.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AndEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3432
		{
			yyVAL.node = assign.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OrEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3444
		{
			yyVAL.node = assign.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.XorEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3456
		{
			yyVAL.node = assign.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3468
		{
			yyVAL.node = assign.NewShiftRight(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SrEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3480
		{
			yyVAL.node = expr.NewPostInc(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IncToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3492
		{
			yyVAL.node = expr.NewPreInc(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IncToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3504
		{
			yyVAL.node = expr.NewPostDec(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DecToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3516
		{
			yyVAL.node = expr.NewPreDec(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DecToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3528
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanOrToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3540
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanAndToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3552
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalOrToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3564
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalAndToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3576
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalXorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3588
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.VerticalBarToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3600
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3612
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CaretToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3624
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DotToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3636
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PlusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3648
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MinusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3660
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsteriskToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3672
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3684
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlashToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3696
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PercentToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3708
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3720
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SrToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3732
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PlusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3744
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.MinusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3756
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ExclamationMarkToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3768
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TildeToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3780
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsIdenticalToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3792
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotIdenticalToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3804
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3816
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3828
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LessToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3840
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsSmallerOrEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3852
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.GreaterToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3864
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsGreaterOrEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3876
		{
			yyVAL.node = expr.NewInstanceOf(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.InstanceofToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3888
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3894
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3900
		{
			yyVAL.node = yyDollar[2].node

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yyVAL.node = nn
				}

				// save position
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, n))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3929
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.ColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3942
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.ColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3955
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3961
		{
			yyVAL.node = cast.NewInt(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IntCastToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3973
		{
			yyVAL.node = cast.NewDouble(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoubleCastToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3985
		{
			yyVAL.node = cast.NewString(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StringCastToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3997
		{
			yyVAL.node = cast.NewArray(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayCastToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4009
		{
			yyVAL.node = cast.NewObject(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ObjectCastToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4021
		{
			yyVAL.node = cast.NewBool(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BoolCastToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4033
		{
			yyVAL.node = cast.NewUnset(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UnsetCastToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4045
		{
			if strings.EqualFold(yyDollar[1].token.Value, "die") {
				yyVAL.node = expr.NewDie(nil)
				if yyDollar[2].node != nil {
					yyVAL.node.(*expr.Die).Expr = yyDollar[2].node.(*expr.Exit).Expr
				}
			} else {
				yyVAL.node = expr.NewExit(nil)
				if yyDollar[2].node != nil {
					yyVAL.node.(*expr.Exit).Expr = yyDollar[2].node.(*expr.Exit).Expr
				}
			}

			// save position
			if yyDollar[2].node == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ExitToken)

			if yyDollar[2].node != nil {
				yylex.(*Parser).comments.AddFromChildNode(yyVAL.node, yyDollar[2].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4075
		{
			yyVAL.node = expr.NewErrorSuppress(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AtToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4087
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4093
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4099
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4105
		{
			yyVAL.node = expr.NewShellExec(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BackquoteToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.BackquoteToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4118
		{
			yyVAL.node = expr.NewPrint(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PrintToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4130
		{
			yyVAL.node = expr.NewYield(nil, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 305:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:4142
		{
			yyVAL.node = expr.NewClosure(yyDollar[4].list, yyDollar[6].ClosureUse, nil, yyDollar[8].list, false, yyDollar[2].token != nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FunctionToken)
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[9].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 306:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:4161
		{
			yyVAL.node = expr.NewClosure(yyDollar[5].list, yyDollar[7].ClosureUse, nil, yyDollar[9].list, true, yyDollar[3].token != nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[10].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.FunctionToken)
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[10].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4184
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4196
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4208
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.DoubleArrowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4221
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.DoubleArrowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4237
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4250
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4263
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(str, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4278
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4294
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4308
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4331
		{
			yyVAL.ClosureUse = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4337
		{
			yyVAL.ClosureUse = expr.NewClosureUse(yyDollar[3].list)

			yylex.(*Parser).positions.AddPosition(yyVAL.ClosureUse, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4348
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[3].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			yyVAL.list = append(yyDollar[1].list, variable)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4364
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[4].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			reference := expr.NewReference(variable)
			yyVAL.list = append(yyDollar[1].list, reference)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[3].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4382
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			yyVAL.list = []node.Node{variable}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4397
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[2].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			reference := expr.NewReference(variable)
			yyVAL.list = []node.Node{reference}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[2].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4418
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = expr.NewFunctionCall(name, yyDollar[2].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(name, yyDollar[2].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4429
		{
			funcName := name.NewRelative(yyDollar[3].list)
			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(funcName, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(funcName, yyDollar[2].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4444
		{
			funcName := name.NewFullyQualified(yyDollar[2].list)
			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[3].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(funcName, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4458
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4470
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4482
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4494
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4506
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4518
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4530
		{
			yyVAL.node = name.NewName(yyDollar[1].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4539
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4552
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4567
		{
			yyVAL.node = name.NewName(yyDollar[1].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4576
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4589
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4604
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4610
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4619
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[3].list[0], yyDollar[2].token, comment.ObjectOperatorToken)

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4656
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4666
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4672
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4682
		{
			yyVAL.list = yyDollar[2].list

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[2].list[0], yyDollar[1].token, comment.ObjectOperatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4694
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4700
		{
			yyVAL.node = expr.NewExit(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4713
		{
			yyVAL.node = expr.NewExit(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4725
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4731
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token.Value)}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4737
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4746
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4752
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4761
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.LnumberToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4773
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DnumberToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4785
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ConstantEncapsedStringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4797
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.LineToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4809
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FileToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4821
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DirToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4833
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TraitCToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4845
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.MethodCToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4857
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FuncCToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4869
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsCToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4881
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, []node.Node{encapsed})

			// save position
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StartHeredocToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4895
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StartHeredocToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4910
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
			yylex.(*Parser).comments.AddFromToken(target, yyDollar[3].token, comment.IdentifierToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4928
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4937
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4943
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4949
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4960
		{
			name := name.NewRelative(yyDollar[3].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4975
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4989
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5003
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5016
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5022
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ClassCToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5034
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5043
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5056
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PlusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5068
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MinusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5080
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsteriskToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5092
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5104
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlashToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5116
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PercentToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5128
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ExclamationMarkToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5140
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TildeToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5152
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.VerticalBarToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5164
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5176
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CaretToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5188
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5200
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SrToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5212
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DotToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5224
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalXorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5236
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalAndToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5248
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalOrToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5260
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanAndToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5272
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanOrToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5284
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsIdenticalToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5296
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotIdenticalToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5308
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5320
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5332
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LessToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5344
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.GreaterToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5356
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsSmallerOrEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5368
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsGreaterOrEqualToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5380
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.ColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:5393
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.ColonToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5406
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PlusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5418
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.MinusToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5430
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5443
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5449
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5460
		{
			name := name.NewRelative(yyDollar[3].list)
			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5473
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5490
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[1].token, comment.StringVarnameToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5504
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5510
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5516
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5522
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoubleQuoteToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5534
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StartHeredocToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5546
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ClassCToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:5561
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5567
		{
			yyVAL.list = yyDollar[1].list

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:5581
		{
			yyVAL.token = nil
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5585
		{
			yyVAL.token = yyDollar[1].token
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:5592
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[4].token, comment.DoubleArrowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5606
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5619
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[2].token, comment.DoubleArrowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5632
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5645
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5651
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5660
		{
			yyVAL.node = yyDollar[2].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5666
		{
			yyVAL.node = yyDollar[2].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5676
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5686
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5695
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:5704
		{
			yyVAL.node = yyDollar[1].node

			if yyDollar[4].list != nil {
				yyDollar[4].list[0].(*expr.MethodCall).Method = yyDollar[3].list[len(yyDollar[3].list)-1].(*expr.PropertyFetch).Property
				yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[3].list[0], yyDollar[2].token, comment.ObjectOperatorToken)

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(nn, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(nn, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(nn, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(nn, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(nn, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(nn, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5756
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5765
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:5771
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5781
		{
			if yyDollar[3].list != nil {
				yyDollar[3].list[0].(*expr.MethodCall).Method = yyDollar[2].list[len(yyDollar[2].list)-1].(*expr.PropertyFetch).Property
				yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
			}

			yyVAL.list = yyDollar[2].list

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[2].list[0], yyDollar[1].token, comment.ObjectOperatorToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5798
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5812
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = []node.Node{yyDollar[1].node, fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5829
		{
			yyVAL.node = expr.NewMethodCall(nil, nil, yyDollar[1].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5841
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5847
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:5853
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5862
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5868
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5883
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5895
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5910
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5919
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5932
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5948
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5954
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5960
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5970
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5976
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5988
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5997
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6010
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6023
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6033
		{
			name := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6047
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:6064
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6070
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6080
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6086
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6099
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6113
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6127
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6140
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6152
		{
			yyVAL.node = yyDollar[2].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6168
		{
			n := expr.NewVariable(nil)
			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}

			// save position
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(n, yyDollar[1].token, comment.DollarToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6181
		{
			n := expr.NewVariable(nil)

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)
			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference

			// save position
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(n, yyDollar[2].token, comment.DollarToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6201
		{
			if len(yyDollar[1].list) == 0 {
				yyDollar[1].list = []node.Node{nil}
			}

			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			if lastNode(yyDollar[1].list) != nil {
				yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6216
		{
			if yyDollar[1].node == nil {
				yyVAL.list = []node.Node{}
			} else {
				yyVAL.list = []node.Node{yyDollar[1].node}
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6230
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6239
		{
			item := expr.NewList(yyDollar[3].list)
			yyVAL.node = expr.NewArrayItem(nil, item)

			// save position
			yylex.(*Parser).positions.AddPosition(item, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(item))

			// save comments
			yylex.(*Parser).comments.AddFromToken(item, yyDollar[1].token, comment.ListToken)
			yylex.(*Parser).comments.AddFromToken(item, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(item, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:6255
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:6265
		{
			yyVAL.list = []node.Node{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6271
		{
			yyVAL.list = yyDollar[1].list

			if yyDollar[2].token != nil {
				yyVAL.list = append(yyDollar[1].list, nil)
			}

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:6289
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[4].token, comment.DoubleArrowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6303
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6316
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[2].token, comment.DoubleArrowToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6329
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 488:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:6339
		{
			reference := expr.NewReference(yyDollar[6].node)
			arrayItem := expr.NewArrayItem(yyDollar[3].node, reference)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[5].token, yyDollar[6].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[4].token, comment.DoubleArrowToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[5].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6356
		{
			reference := expr.NewReference(yyDollar[4].node)
			arrayItem := expr.NewArrayItem(nil, reference)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[3].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6372
		{
			reference := expr.NewReference(yyDollar[4].node)
			arrayItem := expr.NewArrayItem(yyDollar[1].node, reference)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[2].token, comment.DoubleArrowToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[3].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6388
		{
			reference := expr.NewReference(yyDollar[2].node)
			arrayItem := expr.NewArrayItem(nil, reference)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[1].token, comment.AmpersandToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6406
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6412
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yyVAL.list = append(yyDollar[1].list, encapsed)

			// save position
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(encapsed, yyDollar[2].token, comment.EncapsedAndWhitespaceToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6425
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6431
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}

			// save position
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(encapsed, yyDollar[1].token, comment.EncapsedAndWhitespaceToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6447
		{
			name := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6461
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6479
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			variable := expr.NewVariable(identifier)
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ObjectOperatorToken)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[3].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6499
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarOpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6512
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarOpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringVarnameToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:6528
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			variable := expr.NewVariable(identifier)
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarOpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[2].token, comment.StringVarnameToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseCurlyBracesToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6548
		{
			yyVAL.node = yyDollar[2].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6557
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6569
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			}

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NumStringToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6586
		{
			identifier := node.NewIdentifier(strings.TrimLeftFunc(yyDollar[1].token.Value, isDollar))
			yyVAL.node = expr.NewVariable(identifier)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6603
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IssetToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6617
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EmptyToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6631
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EmptyToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6645
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IncludeToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6657
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IncludeOnceToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:6669
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EvalToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6683
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.RequireToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:6695
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.RequireOnceToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6710
		{
			yyVAL.list = []node.Node{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6716
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6728
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:6734
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6743
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6757
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6774
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:6791
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	}
	goto yystack /* stack new state and value */
}
